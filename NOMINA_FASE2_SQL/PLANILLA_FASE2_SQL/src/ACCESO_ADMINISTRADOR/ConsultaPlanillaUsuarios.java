/*
 *Creado por
 * @AngelChacon
 * Estas son las librerias que se requieren para el funcionamiento del codigo o ejecucion
 */

package ACCESO_ADMINISTRADOR;

import PLANILLA_FASE2.Seleccion;
import java.awt.Graphics;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**

 */
public class ConsultaPlanillaUsuarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form ConsultaPlanillaUsuarios
     */
    public ConsultaPlanillaUsuarios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDeducciones = new javax.swing.JTable();
        ImageIcon icon= new ImageIcon(getClass().getResource("/imagenes/fondo login users.jpg"));
        Image image= icon.getImage();
        jDesktopPane1 = new javax.swing.JDesktopPane(){

            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }

        };
        txtTotalLiq = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotalPer = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTotalDed = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPercepciones = new javax.swing.JTable();
        lblNom = new javax.swing.JLabel();
        dt = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setVisible(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Deducciones");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, -1, -1));

        tblDeducciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblDeducciones);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 610, 180));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total Persepciones");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Total Deducciones");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Total Liquido");

        btnBuscar.setText("Buscar por id emp");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Persepciones");

        tblPercepciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblPercepciones);

        lblNom.setBackground(new java.awt.Color(255, 255, 255));
        lblNom.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        lblNom.setForeground(new java.awt.Color(255, 255, 255));

        dt.setBackground(new java.awt.Color(255, 255, 255));
        dt.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        dt.setForeground(new java.awt.Color(255, 255, 255));

        jDesktopPane1.setLayer(txtTotalLiq, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtTotalPer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtTotalDed, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lblNom, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(dt, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTotalLiq, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(202, 202, 202))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(37, 37, 37)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTotalPer, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTotalDed, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(29, 29, 29))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dt, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)))
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(btnBuscar)
                                .addGap(29, 29, 29)
                                .addComponent(lblNom, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel6)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(lblNom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(238, 238, 238)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTotalDed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalLiq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        jPanel1.add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 620));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        //se define las variable que van a contener los nombres de las columnas el primero es para la tabla de persepciones
        DefaultTableModel modelo = new DefaultTableModel();
        //esta sugunda variable es para la tabla de deducciones
        DefaultTableModel modelo2 = new DefaultTableModel();

        try{
            //la variable cn nos contendra el acceso que se necesita para acceder a la base de datos y la tablas que contiene
            //ayudandonos
            Connection cn = DriverManager.getConnection(Seleccion.BD, Seleccion.Usuario, Seleccion.Contraseña);
            //columnoas que se van a tener en la tabla de persepciones
            modelo.addColumn("Nombre");
            modelo.addColumn("Tipo");
            modelo.addColumn("Valor");
            
            //columnoas que se van a tener en la tabla de Deducciones
            modelo2.addColumn("Nombre");
            modelo2.addColumn("Tipo");
            modelo2.addColumn("Valor");

            //Varia
            String NombreConceptot="",TipoConceptot="",valorConceptot="";
            String NombreConcepto2="",TipoConcepto2="",valorConcepto2="";
            String NombreConceptop="",TipoConceptop="",valorConceptop="";

            PreparedStatement psti = cn.prepareStatement("select * from nomina_salario.conceptos where AfectaConcepto=\"Percepcion\" and TipoConcepto = \"Valor\" and aplica = \"Todos\" and CodigoEmpleado = ?");
            psti.setString(1, txtBuscar.getText().trim());
            ResultSet rsi = psti.executeQuery();

            while(rsi.next()){

                NombreConceptot = String.valueOf(rsi.getString("NombreConcepto"));
                TipoConceptot = String.valueOf(rsi.getString("TipoConcepto"));
                valorConceptot = String.valueOf(rsi.getString("valorConcepto"));

                Object filas[] = {NombreConceptot,TipoConceptot,valorConceptot};
                modelo.addRow(filas);
                tblPercepciones.setModel(modelo);

            }
            
            
            PreparedStatement pstp = cn.prepareStatement("select * from nomina_salario.conceptos where AfectaConcepto=\"Deduccion\" and TipoConcepto = \"Porcentaje\" and aplica = \"Algunos\" and CodigoEmpleado = ?");
            pstp.setString(1, txtBuscar.getText().trim());
            ResultSet rsp = pstp.executeQuery();

            

            PreparedStatement pste = cn.prepareStatement("select * from DATOS_EMPLEADO where Id_Empleado = ?");
            pste.setString(1, txtBuscar.getText().trim());
            ResultSet rse = pste.executeQuery();

            while(rse.next()){

                lblNom.setText("Hola, Bienvenido: "+rse.getString("NombreEmpleado"));
                dt.setText("Estos son los calculos:");

                PreparedStatement pstn = cn.prepareStatement("select * from nomina_salario.conceptos where AfectaConcepto=\"Percepcion\" and TipoConcepto = \"Valor\"  and aplica = \"Algunos\" and CodigoEmpleado != ?");
                pstn.setString(1, txtBuscar.getText().trim());
                ResultSet rsn = pstn.executeQuery();

                while(rsn.next()){

                    NombreConcepto2 = String.valueOf(rsn.getString("NombreConcepto"));
                    TipoConcepto2 = String.valueOf(rsn.getString("TipoConcepto"));
                    valorConcepto2 = String.valueOf(rsn.getString("valorConcepto"));

                    Object filas2[] = {NombreConcepto2,TipoConcepto2,valorConcepto2};
                    modelo.addRow(filas2);
                    tblPercepciones.setModel(modelo);

                }

                
            }

            
            //Codigo para deduccion por valor 
            /*PreparedStatement pstp1 = cn.prepareStatement("select * from nomina_salario.conceptos where AfectaConcepto=\"Deduccion\" and TipoConcepto = \"Porcentaje\" and aplica = \"Algunos\" and CodigoEmpleado = ?");
            pstp.setString(1, txtBuscar.getText().trim());
            ResultSet rsp1 = pstp1.executeQuery();

            

            PreparedStatement pste1 = cn.prepareStatement("select * from DATOS_EMPLEADO where Id_Empleado = ?");
            pste.setString(1, txtBuscar.getText().trim());
            ResultSet rse1 = pste1.executeQuery();

            while(rse.next()){

                lblNom.setText("Hola, Bienvenido: "+rse.getString("NombreEmpleado"));
                dt.setText("Estos son los calculos:");

                PreparedStatement pstn1 = cn.prepareStatement("select * from nomina_salario.conceptos where AfectaConcepto=\"Percepcion\" and TipoConcepto = \"Valor\" and aplica = \"Algunos\" and CodigoEmpleado != ?");
                pstn1.setString(1, txtBuscar.getText().trim());
                ResultSet rsn1 = pstn1.executeQuery();

                while(rsn1.next()){

                    NombreConcepto2 = String.valueOf(rsn1.getString("NombreConcepto"));
                    TipoConcepto2 = String.valueOf(rsn1.getString("TipoConcepto"));
                    valorConcepto2 = String.valueOf(rsn1.getString("valorConcepto"));

                    Object filas2[] = {NombreConcepto2,TipoConcepto2,valorConcepto2};
                    modelo.addRow(filas2);
                    tblPercepciones.setModel(modelo);

                }

                
            }*/
            //Codigo para mostrar la tabla de Deducciones

            double st=0,s=0;
            if(tblPercepciones.getRowCount()>0){
                for(int i=0;i<tblPercepciones.getRowCount();i++){
                    s=Double.parseDouble(tblPercepciones.getValueAt(i,2).toString());
                    st+=s;
                }
                
                while(rsp.next()){

               
                double por=0, ty=0,porrand=0,tyrand=0;
                NombreConceptop = String.valueOf(rsp.getString("NombreConcepto"));
                TipoConceptop = String.valueOf(rsp.getString("TipoConcepto"));
                valorConceptop = String.valueOf(rsp.getString("valorConcepto"));
                por = Double.parseDouble(valorConceptop);
                ty = (por*st);
                
                Object filas2[] = {NombreConceptop,TipoConceptop,ty};
                modelo2.addRow(filas2);
                tblDeducciones.setModel(modelo2);
                
                
                
                
                

            }
            while(rsp.next()){

               
                double por1=0, ty1=0,porrand1=0,tyrand1=0;
                String NombreConceptop1 = String.valueOf(rsp.getString("NombreConcepto"));
                String TipoConceptop1 = String.valueOf(rsp.getString("TipoConcepto"));
                String valorConceptop1 = String.valueOf(rsp.getString("valorConcepto"));
                por1 = Double.parseDouble(valorConceptop1);
                ty1 = (por1*st);
                
                Object filas3[] = {NombreConceptop1,TipoConceptop1,ty1};
                modelo2.addRow(filas3);
                tblDeducciones.setModel(modelo2);
                
                
                
                
                

            }
                
                
                txtTotalPer.setText(""+st);

            }
            
            double dt=0,d=0;
            if(tblDeducciones.getRowCount()>0){
                for(int i=0;i<tblDeducciones.getRowCount();i++){
                    d=Double.parseDouble(tblDeducciones.getValueAt(i,2).toString());
                    dt+=d;
                }
                txtTotalDed.setText(""+dt);

            }
            
            double tp=0, td=0,tl=0;
            
            tp = Double.parseDouble(txtTotalPer.getText().trim());
            td = Double.parseDouble(txtTotalDed.getText().trim());

            tl = tp-td;
            
            txtTotalLiq.setText(""+tl);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error");
            System.out.println(e);
        }

    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel dt;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblNom;
    private javax.swing.JTable tblDeducciones;
    private javax.swing.JTable tblPercepciones;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtTotalDed;
    private javax.swing.JTextField txtTotalLiq;
    private javax.swing.JTextField txtTotalPer;
    // End of variables declaration//GEN-END:variables
}
